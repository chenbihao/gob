import{_ as a,c as s,o as e,a as n}from"./app-MeNRN-Ja.js";const l={},i=n(`<h1 id="模型" tabindex="-1"><a class="header-anchor" href="#模型"><span>模型</span></a></h1><h2 id="指南" tabindex="-1"><a class="header-anchor" href="#指南"><span>指南</span></a></h2><p>model 提供了自动生成数据库模型的命令行工具，如果你已经定义好你的model，这里的系列工具能帮助你节省不少时间。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> ./gob model</span>
<span class="line">数据库模型相关的命令</span>
<span class="line"></span>
<span class="line">Usage:</span>
<span class="line">  gob model <span class="token punctuation">[</span>flags<span class="token punctuation">]</span></span>
<span class="line">  gob model <span class="token punctuation">[</span>command<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">Available Commands:</span>
<span class="line">  api         通过数据库生成api</span>
<span class="line">  gen         生成模型</span>
<span class="line">  <span class="token builtin class-name">test</span>        测试数据库</span>
<span class="line"></span>
<span class="line">Flags:</span>
<span class="line">  -h, <span class="token parameter variable">--help</span>   <span class="token builtin class-name">help</span> <span class="token keyword">for</span> model</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>包含三个命令：</p><ul><li><code>./gob model test</code> 测试某个数据库是否可以连接</li><li><code>./gob model gen</code> 通过数据表自动生成model代码</li><li><code>./gob model api</code> 通过数据表自动生成api代码</li></ul><h2 id="model-test" tabindex="-1"><a class="header-anchor" href="#model-test"><span>model test</span></a></h2><p>当你想测试下你的某个配置好的数据库是否能连接上，都有哪些表的时候，这个命令能帮助你。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> ./gob model <span class="token builtin class-name">test</span> <span class="token parameter variable">--database</span><span class="token operator">=</span><span class="token string">&quot;database.default&quot;</span></span>
<span class="line">数据库连接：database.default成功</span>
<span class="line">一共存在1张表</span>
<span class="line">student</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="model-gen" tabindex="-1"><a class="header-anchor" href="#model-gen"><span>model gen</span></a></h2><p>这个命令帮助你生成数据表对应的gorm的model</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> ./gob model gen</span>
<span class="line">Error: required flag<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token string">&quot;output&quot;</span> not <span class="token builtin class-name">set</span></span>
<span class="line">Usage:</span>
<span class="line">  gob model gen <span class="token punctuation">[</span>flags<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">Flags:</span>
<span class="line">  -d, <span class="token parameter variable">--database</span> string   模型连接的数据库 <span class="token punctuation">(</span>default <span class="token string">&quot;database.default&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  -h, <span class="token parameter variable">--help</span>              <span class="token builtin class-name">help</span> <span class="token keyword">for</span> gen</span>
<span class="line">  -o, <span class="token parameter variable">--output</span> string     模型输出地址</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中接受两个参数：</p><ul><li>database</li></ul><p>这个参数可选，用来表示模型连接的数据库配置地址，默认是database.default，表示config目录下的{env}目录下的database.yaml中的default配置。</p><ul><li>output</li></ul><p>这个参数必填，用来表示模型文件的输出地址，如果填写相对路径，会在前面填充当前执行路径来补充为绝对路径。</p><h3 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h3><p>使用命令 <code>./gob model gen --output=app/model</code></p><h2 id="model-api" tabindex="-1"><a class="header-anchor" href="#model-api"><span>model api</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> ./gob model api <span class="token parameter variable">--database</span><span class="token operator">=</span>database.default <span class="token parameter variable">--output</span><span class="token operator">=</span>/path/app/http/module/student/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>它会在目标文件夹中生成对这个数据表的5个接口文件</p><ul><li><code>gen_[table]_api_create.go</code></li><li><code>gen_[table]_api_delete.go</code></li><li><code>gen_[table]_api_list.go</code></li><li><code>gen_[table]_api_show.go</code></li><li><code>gen_[table]_api_update.go</code></li></ul><p>还有另外两个文件</p><ul><li><code>gen_[table]_model.go</code> // 数据表对应的模型结构</li><li><code>gen_[table]_router.go</code> // 5个接口对应的默认路由</li></ul><blockquote><p>这里的每个文件都是可以修改的。</p><p>但是注意，如果重新生成，会覆盖原先的文件。</p><p>执行命令的时候切记保存已经改动的代码文件。</p></blockquote>`,26),t=[i];function p(d,o){return e(),s("div",null,t)}const r=a(l,[["render",p],["__file","model.html.vue"]]),u=JSON.parse('{"path":"/guide/model.html","title":"模型","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"模型","description":null},"headers":[{"level":2,"title":"指南","slug":"指南","link":"#指南","children":[]},{"level":2,"title":"model test","slug":"model-test","link":"#model-test","children":[]},{"level":2,"title":"model gen","slug":"model-gen","link":"#model-gen","children":[{"level":3,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[]}]},{"level":2,"title":"model api","slug":"model-api","link":"#model-api","children":[]}],"git":{"updatedTime":1718367132000,"contributors":[{"name":"陈壁浩","email":"chenbihao@qljy.com","commits":2}]},"filePathRelative":"guide/model.md"}');export{r as comp,u as data};

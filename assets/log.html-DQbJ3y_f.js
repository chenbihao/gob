import{_ as n,c as s,o as a,b as t}from"./app-BSoEOH6w.js";const p={},e=t(`<h1 id="gob-log" tabindex="-1"><a class="header-anchor" href="#gob-log"><span>gob:log</span></a></h1><h2 id="服务介绍" tabindex="-1"><a class="header-anchor" href="#服务介绍"><span>服务介绍：</span></a></h2><p>提供日志记录相关操作</p><h2 id="支持命令-无" tabindex="-1"><a class="header-anchor" href="#支持命令-无"><span>支持命令：无</span></a></h2><h2 id="支持配置-无" tabindex="-1"><a class="header-anchor" href="#支持配置-无"><span>支持配置：无</span></a></h2><h2 id="提供方法" tabindex="-1"><a class="header-anchor" href="#提供方法"><span>提供方法：</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">type</span> Log <span class="token keyword">interface</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// Panic 表示会导致整个程序出现崩溃的日志信息</span></span>
<span class="line">	<span class="token function">Panic</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> msg <span class="token builtin">string</span><span class="token punctuation">,</span> fields <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// Fatal 表示会导致当前这个请求出现提前终止的错误信息</span></span>
<span class="line">	<span class="token function">Fatal</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> msg <span class="token builtin">string</span><span class="token punctuation">,</span> fields <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// Error 表示出现错误，但是不一定影响后续请求逻辑的错误信息</span></span>
<span class="line">	<span class="token function">Error</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> msg <span class="token builtin">string</span><span class="token punctuation">,</span> fields <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// Warn 表示出现错误，但是一定不影响后续请求逻辑的报警信息</span></span>
<span class="line">	<span class="token function">Warn</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> msg <span class="token builtin">string</span><span class="token punctuation">,</span> fields <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// Info 表示正常的日志信息输出</span></span>
<span class="line">	<span class="token function">Info</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> msg <span class="token builtin">string</span><span class="token punctuation">,</span> fields <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// Debug 表示在调试状态下打印出来的日志信息</span></span>
<span class="line">	<span class="token function">Debug</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> msg <span class="token builtin">string</span><span class="token punctuation">,</span> fields <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// Trace 表示最详细的信息，一般信息量比较大，可能包含调用堆栈等信息</span></span>
<span class="line">	<span class="token function">Trace</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> msg <span class="token builtin">string</span><span class="token punctuation">,</span> fields <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// SetLevel 设置日志级别</span></span>
<span class="line">	<span class="token function">SetLevel</span><span class="token punctuation">(</span>level LogLevel<span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// SetCtxFielder 从context中获取上下文字段field</span></span>
<span class="line">	<span class="token function">SetCtxFielder</span><span class="token punctuation">(</span>handler CtxFielder<span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// SetFormatter 设置输出格式</span></span>
<span class="line">	<span class="token function">SetFormatter</span><span class="token punctuation">(</span>formatter Formatter<span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// SetOutput 设置输出管道</span></span>
<span class="line">	<span class="token function">SetOutput</span><span class="token punctuation">(</span>out io<span class="token punctuation">.</span>Writer<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),c=[e];function l(o,i){return a(),s("div",null,c)}const k=n(p,[["render",l],["__file","log.html.vue"]]),r=JSON.parse('{"path":"/provider/log.html","title":"gob:log","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"gob:log","description":null},"headers":[{"level":2,"title":"服务介绍：","slug":"服务介绍","link":"#服务介绍","children":[]},{"level":2,"title":"支持命令：无","slug":"支持命令-无","link":"#支持命令-无","children":[]},{"level":2,"title":"支持配置：无","slug":"支持配置-无","link":"#支持配置-无","children":[]},{"level":2,"title":"提供方法：","slug":"提供方法","link":"#提供方法","children":[]}],"git":{"updatedTime":1717776942000,"contributors":[{"name":"陈壁浩","email":"chenbihao@qljy.com","commits":3}]},"filePathRelative":"provider/log.md"}');export{k as comp,r as data};

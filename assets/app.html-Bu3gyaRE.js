import{_ as a,c as s,o as n,a as e}from"./app-MeNRN-Ja.js";const l={},i=e(`<h1 id="运行" tabindex="-1"><a class="header-anchor" href="#运行"><span>运行</span></a></h1><h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令"><span>命令</span></a></h2><p>相关的命令详见：<a href="../command/app">app</a></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&gt; ./gob app         </span>
<span class="line">业务应用控制命令，其包含业务启动，关闭，重启，查询等功能</span>
<span class="line"></span>
<span class="line">Usage:</span>
<span class="line">  gob app [flags]</span>
<span class="line">  gob app [command]</span>
<span class="line"></span>
<span class="line">Available Commands:</span>
<span class="line">  start       启动一个Web服务</span>
<span class="line"></span>
<span class="line">Flags:</span>
<span class="line">  -h, --help   help for app</span>
<span class="line"></span>
<span class="line">Use &quot;gob app [command] --help&quot; for more information about a command.</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的运行是运行整个 app，这个 app 可以只包含后端，也可以只包含前端，但是后端也是隐藏在前端后面运行。具体可以参考 <code>app/http/route.go</code></p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> http</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;github.com/chenbihao/gob/app/http/controller/demo&quot;</span></span>
<span class="line">	<span class="token string">&quot;github.com/chenbihao/gob/framework/gin&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">Routes</span><span class="token punctuation">(</span>r <span class="token operator">*</span>gin<span class="token punctuation">.</span>Engine<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">Static</span><span class="token punctuation">(</span><span class="token string">&quot;/dist/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./dist/&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/demo/demo&quot;</span><span class="token punctuation">,</span> demo<span class="token punctuation">.</span>Demo<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动"><span>启动</span></a></h2><p>可以使用 <code>./gob app start</code> 启动一个应用。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> gob app start</span>
<span class="line">Server Started , Local: http://localhost:8080</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以使用 <code>./gob app start -d</code> 使用 daemon 模式启动一个应用。应用名称为 <code>gob app</code></p><p>(目前win不支持daemon模式启动)</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> ./gob app start <span class="token parameter variable">-d</span></span>
<span class="line">成功启动进程: gob app</span>
<span class="line">进程pid: xxxxx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>app 应用的输出记录在 <code>/storage/log/app.log</code></p><p>进程 id 记录在 <code>/storage/pid/app.pid</code></p><h2 id="状态" tabindex="-1"><a class="header-anchor" href="#状态"><span>状态</span></a></h2><p>当使用 daemon 模式启动的时候，需要查看当前应用是否有启动，如果启动了，进程号是多少，可以使用命令 <code>./gob app state</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> ./gob app state</span>
<span class="line">app服务已经启动, pid: xxxxx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重启" tabindex="-1"><a class="header-anchor" href="#重启"><span>重启</span></a></h2><p>当使用 daemon 模式启动的时候，需要重启应用，可以使用命令 <code>./gob app restart</code></p><p>如果程序还未启动，调用 restart 命令，效果和 start 命令一样，daemon 模式启动应用</p><h2 id="停止" tabindex="-1"><a class="header-anchor" href="#停止"><span>停止</span></a></h2><p>当使用 daemon 模式启动的时候，需要关闭应用，可以使用命令 <code>./gob app stop</code></p><h2 id="进程运行基础配置" tabindex="-1"><a class="header-anchor" href="#进程运行基础配置"><span>进程运行基础配置</span></a></h2><p>在启动进程的时候，我们会需要定义一些配置项，这些配置项决定进程的运行环境（比如日志存放位置，运行态信息存放位置，配置文件存放位置等）。</p><p>这里我们提供了3种配置方式来设置这些基础配置，包括环境变量设置，命令行参数设置，配置文件设置。</p><p>这三种配置方式的优先级为：命令行参数 &gt; 环境变量 &gt; 配置文件</p><p>具体的配置项常用的如下，具体更多可以参考 <code>framework/provider/app/service.go</code> ：</p><ul><li>运行中间信息存放目录 <ul><li>命令行参数：--runtime_folder</li><li>环境变量：RUNTIME_FOLDER</li><li>配置文件：app.path.runtime_folder</li><li>不设置默认为：运行信息基础目录 + runtime</li></ul></li><li>日志存放目录 <ul><li>命令行参数：--log_folder</li><li>环境变量：LOG_FOLDER</li><li>配置文件：app.path.log_folder</li><li>不设置默认为：运行信息基础目录 + log</li></ul></li><li>运行信息基础目录 <ul><li>命令行参数：--storage_folder</li><li>环境变量：STORAGE_FOLDER</li><li>配置文件：app.path.storage_folder</li><li>不设置默认为：基础目录 + storage</li></ul></li><li>配置文件地址 <ul><li>命令行参数：--config_folder</li><li>环境变量：CONFIG_FOLDER</li><li>配置文件：app.path.config_folder</li><li>不设置默认为：基础目录 + config</li></ul></li><li>基础目录 <ul><li>命令行参数：--base_folder</li><li>环境变量：BASE_FOLDER</li><li>配置文件：app.path.base_folder</li><li>不设置默认为：当前执行目录</li></ul></li></ul><h3 id="环境变量设置" tabindex="-1"><a class="header-anchor" href="#环境变量设置"><span>环境变量设置</span></a></h3><p>在启动进程的时候进行环境变量的设置。比如</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">STORAGE_FOLDER</span><span class="token operator">=</span>/path/gob/storage ./gob app start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="命令行参数设置" tabindex="-1"><a class="header-anchor" href="#命令行参数设置"><span>命令行参数设置</span></a></h3><p>在命令行参数中设置。比如</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./gob app start <span class="token parameter variable">--storage_folder</span><span class="token operator">=</span>/path/gob/storage/ <span class="token parameter variable">-d</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="配置文件设置" tabindex="-1"><a class="header-anchor" href="#配置文件设置"><span>配置文件设置</span></a></h3><p>在配置文件<code>config/\${env}/app.yaml</code>中配置：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">path:</span>
<span class="line">storage_folder: <span class="token string">&quot;/path/gob/storage/&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,37),p=[i];function t(d,c){return n(),s("div",null,p)}const o=a(l,[["render",t],["__file","app.html.vue"]]),u=JSON.parse('{"path":"/guide/app.html","title":"运行","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"运行","description":null},"headers":[{"level":2,"title":"命令","slug":"命令","link":"#命令","children":[]},{"level":2,"title":"启动","slug":"启动","link":"#启动","children":[]},{"level":2,"title":"状态","slug":"状态","link":"#状态","children":[]},{"level":2,"title":"重启","slug":"重启","link":"#重启","children":[]},{"level":2,"title":"停止","slug":"停止","link":"#停止","children":[]},{"level":2,"title":"进程运行基础配置","slug":"进程运行基础配置","link":"#进程运行基础配置","children":[{"level":3,"title":"环境变量设置","slug":"环境变量设置","link":"#环境变量设置","children":[]},{"level":3,"title":"命令行参数设置","slug":"命令行参数设置","link":"#命令行参数设置","children":[]},{"level":3,"title":"配置文件设置","slug":"配置文件设置","link":"#配置文件设置","children":[]}]}],"git":{"updatedTime":1718016868000,"contributors":[{"name":"被水淹没","email":"994523036@qq.com","commits":1},{"name":"陈壁浩","email":"chenbihao@qljy.com","commits":1}]},"filePathRelative":"guide/app.md"}');export{o as comp,u as data};
